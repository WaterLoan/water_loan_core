{
  "contractName": "PausableCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../Crowdsale.sol\";\nimport \"../../lifecycle/Pausable.sol\";\n\n/**\n * @title PausableCrowdsale\n * @dev Extension of Crowdsale contract where purchases can be paused and unpaused by the pauser role.\n */\ncontract PausableCrowdsale is Crowdsale, Pausable {\n    /**\n     * @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\n     * Use super to concatenate validations.\n     * Adds the validation that the crowdsale must not be paused.\n     * @param _beneficiary Address performing the token purchase\n     * @param _weiAmount Value in wei involved in the purchase\n     */\n    function _preValidatePurchase(address _beneficiary, uint256 _weiAmount) internal view whenNotPaused {\n        return super._preValidatePurchase(_beneficiary, _weiAmount);\n    }\n}\n",
  "sourcePath": "/Users/bibodeng/Programming/water_loan_core/contracts/libraries/openzeppelin-solidity/contracts/crowdsale/validation/PausableCrowdsale.sol",
  "ast": {
    "absolutePath": "/Users/bibodeng/Programming/water_loan_core/contracts/libraries/openzeppelin-solidity/contracts/crowdsale/validation/PausableCrowdsale.sol",
    "exportedSymbols": {
      "PausableCrowdsale": [
        13028
      ]
    },
    "id": 13029,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13005,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:46"
      },
      {
        "absolutePath": "/Users/bibodeng/Programming/water_loan_core/contracts/libraries/openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "../Crowdsale.sol",
        "id": 13006,
        "nodeType": "ImportDirective",
        "scope": 13029,
        "sourceUnit": 12211,
        "src": "25:26:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/bibodeng/Programming/water_loan_core/contracts/libraries/openzeppelin-solidity/contracts/lifecycle/Pausable.sol",
        "file": "../../lifecycle/Pausable.sol",
        "id": 13007,
        "nodeType": "ImportDirective",
        "scope": 13029,
        "sourceUnit": 15003,
        "src": "52:38:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13008,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12210,
              "src": "261:9:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$12210",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 13009,
            "nodeType": "InheritanceSpecifier",
            "src": "261:9:46"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13010,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15002,
              "src": "272:8:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$15002",
                "typeString": "contract Pausable"
              }
            },
            "id": 13011,
            "nodeType": "InheritanceSpecifier",
            "src": "272:8:46"
          }
        ],
        "contractDependencies": [
          10117,
          11606,
          12210,
          15002,
          20082
        ],
        "contractKind": "contract",
        "documentation": "@title PausableCrowdsale\n@dev Extension of Crowdsale contract where purchases can be paused and unpaused by the pauser role.",
        "fullyImplemented": false,
        "id": 13028,
        "linearizedBaseContracts": [
          13028,
          15002,
          11606,
          12210,
          20082,
          10117
        ],
        "name": "PausableCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 13026,
              "nodeType": "Block",
              "src": "758:76:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13022,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13013,
                        "src": "802:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13023,
                        "name": "_weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13015,
                        "src": "816:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13020,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22819,
                        "src": "775:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_PausableCrowdsale_$13028",
                          "typeString": "contract super PausableCrowdsale"
                        }
                      },
                      "id": 13021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_preValidatePurchase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12141,
                      "src": "775:26:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) view"
                      }
                    },
                    "id": 13024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "775:52:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "functionReturnParameters": 13019,
                  "id": 13025,
                  "nodeType": "Return",
                  "src": "768:59:46"
                }
              ]
            },
            "documentation": "@dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\nUse super to concatenate validations.\nAdds the validation that the crowdsale must not be paused.\n@param _beneficiary Address performing the token purchase\n@param _weiAmount Value in wei involved in the purchase",
            "id": 13027,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 13018,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13017,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14958,
                  "src": "744:13:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "744:13:46"
              }
            ],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13013,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 13027,
                  "src": "688:20:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13015,
                  "name": "_weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 13027,
                  "src": "710:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "710:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "687:42:46"
            },
            "returnParameters": {
              "id": 13019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "758:0:46"
            },
            "scope": 13028,
            "src": "658:176:46",
            "stateMutability": "view",
            "superFunction": 12141,
            "visibility": "internal"
          }
        ],
        "scope": 13029,
        "src": "231:605:46"
      }
    ],
    "src": "0:837:46"
  },
  "legacyAST": {
    "absolutePath": "/Users/bibodeng/Programming/water_loan_core/contracts/libraries/openzeppelin-solidity/contracts/crowdsale/validation/PausableCrowdsale.sol",
    "exportedSymbols": {
      "PausableCrowdsale": [
        13028
      ]
    },
    "id": 13029,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13005,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:46"
      },
      {
        "absolutePath": "/Users/bibodeng/Programming/water_loan_core/contracts/libraries/openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "../Crowdsale.sol",
        "id": 13006,
        "nodeType": "ImportDirective",
        "scope": 13029,
        "sourceUnit": 12211,
        "src": "25:26:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/bibodeng/Programming/water_loan_core/contracts/libraries/openzeppelin-solidity/contracts/lifecycle/Pausable.sol",
        "file": "../../lifecycle/Pausable.sol",
        "id": 13007,
        "nodeType": "ImportDirective",
        "scope": 13029,
        "sourceUnit": 15003,
        "src": "52:38:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13008,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12210,
              "src": "261:9:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$12210",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 13009,
            "nodeType": "InheritanceSpecifier",
            "src": "261:9:46"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13010,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15002,
              "src": "272:8:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$15002",
                "typeString": "contract Pausable"
              }
            },
            "id": 13011,
            "nodeType": "InheritanceSpecifier",
            "src": "272:8:46"
          }
        ],
        "contractDependencies": [
          10117,
          11606,
          12210,
          15002,
          20082
        ],
        "contractKind": "contract",
        "documentation": "@title PausableCrowdsale\n@dev Extension of Crowdsale contract where purchases can be paused and unpaused by the pauser role.",
        "fullyImplemented": false,
        "id": 13028,
        "linearizedBaseContracts": [
          13028,
          15002,
          11606,
          12210,
          20082,
          10117
        ],
        "name": "PausableCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 13026,
              "nodeType": "Block",
              "src": "758:76:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13022,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13013,
                        "src": "802:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13023,
                        "name": "_weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13015,
                        "src": "816:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13020,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22819,
                        "src": "775:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_PausableCrowdsale_$13028",
                          "typeString": "contract super PausableCrowdsale"
                        }
                      },
                      "id": 13021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_preValidatePurchase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12141,
                      "src": "775:26:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) view"
                      }
                    },
                    "id": 13024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "775:52:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "functionReturnParameters": 13019,
                  "id": 13025,
                  "nodeType": "Return",
                  "src": "768:59:46"
                }
              ]
            },
            "documentation": "@dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\nUse super to concatenate validations.\nAdds the validation that the crowdsale must not be paused.\n@param _beneficiary Address performing the token purchase\n@param _weiAmount Value in wei involved in the purchase",
            "id": 13027,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 13018,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13017,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14958,
                  "src": "744:13:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "744:13:46"
              }
            ],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13013,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 13027,
                  "src": "688:20:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13015,
                  "name": "_weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 13027,
                  "src": "710:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "710:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "687:42:46"
            },
            "returnParameters": {
              "id": 13019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "758:0:46"
            },
            "scope": 13028,
            "src": "658:176:46",
            "stateMutability": "view",
            "superFunction": 12141,
            "visibility": "internal"
          }
        ],
        "scope": 13029,
        "src": "231:605:46"
      }
    ],
    "src": "0:837:46"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.d15a3125.mod.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2020-11-19T10:56:46.705Z"
}