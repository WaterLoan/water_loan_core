{
  "contractName": "PullPayment",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdrawPayments",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdrawPaymentsWithGas",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "dest",
          "type": "address"
        }
      ],
      "name": "payments",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./escrow/Escrow.sol\";\n\n/**\n * @dev Simple implementation of a\n * https://consensys.github.io/smart-contract-best-practices/recommendations/#favor-pull-over-push-for-external-calls[pull-payment]\n * strategy, where the paying contract doesn't interact directly with the\n * receiver account, which must withdraw its payments itself.\n *\n * Pull-payments are often considered the best practice when it comes to sending\n * Ether, security-wise. It prevents recipients from blocking execution, and\n * eliminates reentrancy concerns.\n *\n * To use, derive from the `PullPayment` contract, and use {_asyncTransfer}\n * instead of Solidity's `transfer` function. Payees can query their due\n * payments with {payments}, and retrieve them with {withdrawPayments}.\n */\ncontract PullPayment {\n    Escrow private _escrow;\n\n    constructor () internal {\n        _escrow = new Escrow();\n    }\n\n    /**\n     * @dev Withdraw accumulated payments.\n     *\n     * Note that _any_ account can call this function, not just the `payee`.\n     * This means that contracts unaware of the `PullPayment` protocol can still\n     * receive funds this way, by having a separate account call\n     * {withdrawPayments}.\n     *\n     * NOTE: This function has been deprecated, use {withdrawPaymentsWithGas}\n     * instead. Calling contracts with fixed gas limits is an anti-pattern and\n     * may break contract interactions in network upgrades (hardforks).\n     * https://diligence.consensys.net/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more.]\n     *\n     * @param payee Whose payments will be withdrawn.\n     */\n    function withdrawPayments(address payable payee) public {\n        _escrow.withdraw(payee);\n    }\n\n    /**\n     * @dev Same as {withdrawPayments}, but forwarding all gas to the recipient.\n     *\n     * WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\n     * Make sure you trust the recipient, or are either following the\n     * checks-effects-interactions pattern or using {ReentrancyGuard}.\n     *\n     * _Available since v2.4.0._\n     */\n    function withdrawPaymentsWithGas(address payable payee) external {\n        _escrow.withdrawWithGas(payee);\n    }\n\n    /**\n     * @dev Returns the payments owed to an address.\n     * @param dest The creditor's address.\n     */\n    function payments(address dest) public view returns (uint256) {\n        return _escrow.depositsOf(dest);\n    }\n\n    /**\n     * @dev Called by the payer to store the sent amount as credit to be pulled.\n     * Funds sent in this way are stored in an intermediate {Escrow} contract, so\n     * there is no danger of them being spent before withdrawal.\n     *\n     * @param dest The destination address of the funds.\n     * @param amount The amount to transfer.\n     */\n    function _asyncTransfer(address dest, uint256 amount) internal {\n        _escrow.deposit.value(amount)(dest);\n    }\n}\n",
  "sourcePath": "/Users/bibodeng/Programming/water_loan_core/contracts/libraries/openzeppelin-solidity/contracts/payment/PullPayment.sol",
  "ast": {
    "absolutePath": "/Users/bibodeng/Programming/water_loan_core/contracts/libraries/openzeppelin-solidity/contracts/payment/PullPayment.sol",
    "exportedSymbols": {
      "PullPayment": [
        15803
      ]
    },
    "id": 15804,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15734,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:70"
      },
      {
        "absolutePath": "/Users/bibodeng/Programming/water_loan_core/contracts/libraries/openzeppelin-solidity/contracts/payment/escrow/Escrow.sol",
        "file": "./escrow/Escrow.sol",
        "id": 15735,
        "nodeType": "ImportDirective",
        "scope": 15804,
        "sourceUnit": 15969,
        "src": "25:29:70",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          15968
        ],
        "contractKind": "contract",
        "documentation": "@dev Simple implementation of a\nhttps://consensys.github.io/smart-contract-best-practices/recommendations/#favor-pull-over-push-for-external-calls[pull-payment]\nstrategy, where the paying contract doesn't interact directly with the\nreceiver account, which must withdraw its payments itself.\n * Pull-payments are often considered the best practice when it comes to sending\nEther, security-wise. It prevents recipients from blocking execution, and\neliminates reentrancy concerns.\n * To use, derive from the `PullPayment` contract, and use {_asyncTransfer}\ninstead of Solidity's `transfer` function. Payees can query their due\npayments with {payments}, and retrieve them with {withdrawPayments}.",
        "fullyImplemented": true,
        "id": 15803,
        "linearizedBaseContracts": [
          15803
        ],
        "name": "PullPayment",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 15737,
            "name": "_escrow",
            "nodeType": "VariableDeclaration",
            "scope": 15803,
            "src": "814:22:70",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Escrow_$15968",
              "typeString": "contract Escrow"
            },
            "typeName": {
              "contractScope": null,
              "id": 15736,
              "name": "Escrow",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15968,
              "src": "814:6:70",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Escrow_$15968",
                "typeString": "contract Escrow"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 15746,
              "nodeType": "Block",
              "src": "867:39:70",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 15740,
                      "name": "_escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15737,
                      "src": "877:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Escrow_$15968",
                        "typeString": "contract Escrow"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 15742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "887:10:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Escrow_$15968_$",
                          "typeString": "function () returns (contract Escrow)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 15741,
                          "name": "Escrow",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 15968,
                          "src": "891:6:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Escrow_$15968",
                            "typeString": "contract Escrow"
                          }
                        }
                      },
                      "id": 15743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "887:12:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Escrow_$15968",
                        "typeString": "contract Escrow"
                      }
                    },
                    "src": "877:22:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Escrow_$15968",
                      "typeString": "contract Escrow"
                    }
                  },
                  "id": 15745,
                  "nodeType": "ExpressionStatement",
                  "src": "877:22:70"
                }
              ]
            },
            "documentation": null,
            "id": 15747,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "855:2:70"
            },
            "returnParameters": {
              "id": 15739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "867:0:70"
            },
            "scope": 15803,
            "src": "843:63:70",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15758,
              "nodeType": "Block",
              "src": "1681:40:70",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15755,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15749,
                        "src": "1708:5:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15752,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15737,
                        "src": "1691:7:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Escrow_$15968",
                          "typeString": "contract Escrow"
                        }
                      },
                      "id": 15754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15936,
                      "src": "1691:16:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable) external"
                      }
                    },
                    "id": 15756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1691:23:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15757,
                  "nodeType": "ExpressionStatement",
                  "src": "1691:23:70"
                }
              ]
            },
            "documentation": "@dev Withdraw accumulated payments.\n     * Note that _any_ account can call this function, not just the `payee`.\nThis means that contracts unaware of the `PullPayment` protocol can still\nreceive funds this way, by having a separate account call\n{withdrawPayments}.\n     * NOTE: This function has been deprecated, use {withdrawPaymentsWithGas}\ninstead. Calling contracts with fixed gas limits is an anti-pattern and\nmay break contract interactions in network upgrades (hardforks).\nhttps://diligence.consensys.net/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more.]\n     * @param payee Whose payments will be withdrawn.",
            "id": 15759,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawPayments",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15749,
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 15759,
                  "src": "1651:21:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 15748,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1651:15:70",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1650:23:70"
            },
            "returnParameters": {
              "id": 15751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1681:0:70"
            },
            "scope": 15803,
            "src": "1625:96:70",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15770,
              "nodeType": "Block",
              "src": "2158:47:70",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15767,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15761,
                        "src": "2192:5:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15764,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15737,
                        "src": "2168:7:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Escrow_$15968",
                          "typeString": "contract Escrow"
                        }
                      },
                      "id": 15766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawWithGas",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15967,
                      "src": "2168:23:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable) external"
                      }
                    },
                    "id": 15768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2168:30:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15769,
                  "nodeType": "ExpressionStatement",
                  "src": "2168:30:70"
                }
              ]
            },
            "documentation": "@dev Same as {withdrawPayments}, but forwarding all gas to the recipient.\n     * WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\nMake sure you trust the recipient, or are either following the\nchecks-effects-interactions pattern or using {ReentrancyGuard}.\n     * _Available since v2.4.0._",
            "id": 15771,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawPaymentsWithGas",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15761,
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 15771,
                  "src": "2126:21:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 15760,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2126:15:70",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2125:23:70"
            },
            "returnParameters": {
              "id": 15763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2158:0:70"
            },
            "scope": 15803,
            "src": "2093:112:70",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15783,
              "nodeType": "Block",
              "src": "2385:48:70",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15780,
                        "name": "dest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15773,
                        "src": "2421:4:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15778,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15737,
                        "src": "2402:7:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Escrow_$15968",
                          "typeString": "contract Escrow"
                        }
                      },
                      "id": 15779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositsOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15876,
                      "src": "2402:18:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 15781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2402:24:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15777,
                  "id": 15782,
                  "nodeType": "Return",
                  "src": "2395:31:70"
                }
              ]
            },
            "documentation": "@dev Returns the payments owed to an address.\n@param dest The creditor's address.",
            "id": 15784,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payments",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15773,
                  "name": "dest",
                  "nodeType": "VariableDeclaration",
                  "scope": 15784,
                  "src": "2341:12:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15772,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2341:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2340:14:70"
            },
            "returnParameters": {
              "id": 15777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15776,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15784,
                  "src": "2376:7:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2376:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2375:9:70"
            },
            "scope": 15803,
            "src": "2323:110:70",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15801,
              "nodeType": "Block",
              "src": "2855:52:70",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15798,
                        "name": "dest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15786,
                        "src": "2895:4:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 15796,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15788,
                          "src": "2887:6:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15791,
                            "name": "_escrow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15737,
                            "src": "2865:7:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Escrow_$15968",
                              "typeString": "contract Escrow"
                            }
                          },
                          "id": 15794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deposit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15905,
                          "src": "2865:15:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                            "typeString": "function (address) payable external"
                          }
                        },
                        "id": 15795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2865:21:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_address_$returns$__$value_$",
                          "typeString": "function (uint256) returns (function (address) payable external)"
                        }
                      },
                      "id": 15797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2865:29:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 15799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2865:35:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15800,
                  "nodeType": "ExpressionStatement",
                  "src": "2865:35:70"
                }
              ]
            },
            "documentation": "@dev Called by the payer to store the sent amount as credit to be pulled.\nFunds sent in this way are stored in an intermediate {Escrow} contract, so\nthere is no danger of them being spent before withdrawal.\n     * @param dest The destination address of the funds.\n@param amount The amount to transfer.",
            "id": 15802,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_asyncTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15786,
                  "name": "dest",
                  "nodeType": "VariableDeclaration",
                  "scope": 15802,
                  "src": "2816:12:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15785,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2816:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15788,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 15802,
                  "src": "2830:14:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2830:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2815:30:70"
            },
            "returnParameters": {
              "id": 15790,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2855:0:70"
            },
            "scope": 15803,
            "src": "2792:115:70",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 15804,
        "src": "787:2122:70"
      }
    ],
    "src": "0:2910:70"
  },
  "legacyAST": {
    "absolutePath": "/Users/bibodeng/Programming/water_loan_core/contracts/libraries/openzeppelin-solidity/contracts/payment/PullPayment.sol",
    "exportedSymbols": {
      "PullPayment": [
        15803
      ]
    },
    "id": 15804,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15734,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:70"
      },
      {
        "absolutePath": "/Users/bibodeng/Programming/water_loan_core/contracts/libraries/openzeppelin-solidity/contracts/payment/escrow/Escrow.sol",
        "file": "./escrow/Escrow.sol",
        "id": 15735,
        "nodeType": "ImportDirective",
        "scope": 15804,
        "sourceUnit": 15969,
        "src": "25:29:70",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          15968
        ],
        "contractKind": "contract",
        "documentation": "@dev Simple implementation of a\nhttps://consensys.github.io/smart-contract-best-practices/recommendations/#favor-pull-over-push-for-external-calls[pull-payment]\nstrategy, where the paying contract doesn't interact directly with the\nreceiver account, which must withdraw its payments itself.\n * Pull-payments are often considered the best practice when it comes to sending\nEther, security-wise. It prevents recipients from blocking execution, and\neliminates reentrancy concerns.\n * To use, derive from the `PullPayment` contract, and use {_asyncTransfer}\ninstead of Solidity's `transfer` function. Payees can query their due\npayments with {payments}, and retrieve them with {withdrawPayments}.",
        "fullyImplemented": true,
        "id": 15803,
        "linearizedBaseContracts": [
          15803
        ],
        "name": "PullPayment",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 15737,
            "name": "_escrow",
            "nodeType": "VariableDeclaration",
            "scope": 15803,
            "src": "814:22:70",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Escrow_$15968",
              "typeString": "contract Escrow"
            },
            "typeName": {
              "contractScope": null,
              "id": 15736,
              "name": "Escrow",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15968,
              "src": "814:6:70",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Escrow_$15968",
                "typeString": "contract Escrow"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 15746,
              "nodeType": "Block",
              "src": "867:39:70",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 15740,
                      "name": "_escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15737,
                      "src": "877:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Escrow_$15968",
                        "typeString": "contract Escrow"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 15742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "887:10:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Escrow_$15968_$",
                          "typeString": "function () returns (contract Escrow)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 15741,
                          "name": "Escrow",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 15968,
                          "src": "891:6:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Escrow_$15968",
                            "typeString": "contract Escrow"
                          }
                        }
                      },
                      "id": 15743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "887:12:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Escrow_$15968",
                        "typeString": "contract Escrow"
                      }
                    },
                    "src": "877:22:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Escrow_$15968",
                      "typeString": "contract Escrow"
                    }
                  },
                  "id": 15745,
                  "nodeType": "ExpressionStatement",
                  "src": "877:22:70"
                }
              ]
            },
            "documentation": null,
            "id": 15747,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "855:2:70"
            },
            "returnParameters": {
              "id": 15739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "867:0:70"
            },
            "scope": 15803,
            "src": "843:63:70",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15758,
              "nodeType": "Block",
              "src": "1681:40:70",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15755,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15749,
                        "src": "1708:5:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15752,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15737,
                        "src": "1691:7:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Escrow_$15968",
                          "typeString": "contract Escrow"
                        }
                      },
                      "id": 15754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15936,
                      "src": "1691:16:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable) external"
                      }
                    },
                    "id": 15756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1691:23:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15757,
                  "nodeType": "ExpressionStatement",
                  "src": "1691:23:70"
                }
              ]
            },
            "documentation": "@dev Withdraw accumulated payments.\n     * Note that _any_ account can call this function, not just the `payee`.\nThis means that contracts unaware of the `PullPayment` protocol can still\nreceive funds this way, by having a separate account call\n{withdrawPayments}.\n     * NOTE: This function has been deprecated, use {withdrawPaymentsWithGas}\ninstead. Calling contracts with fixed gas limits is an anti-pattern and\nmay break contract interactions in network upgrades (hardforks).\nhttps://diligence.consensys.net/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more.]\n     * @param payee Whose payments will be withdrawn.",
            "id": 15759,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawPayments",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15749,
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 15759,
                  "src": "1651:21:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 15748,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1651:15:70",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1650:23:70"
            },
            "returnParameters": {
              "id": 15751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1681:0:70"
            },
            "scope": 15803,
            "src": "1625:96:70",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15770,
              "nodeType": "Block",
              "src": "2158:47:70",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15767,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15761,
                        "src": "2192:5:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15764,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15737,
                        "src": "2168:7:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Escrow_$15968",
                          "typeString": "contract Escrow"
                        }
                      },
                      "id": 15766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawWithGas",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15967,
                      "src": "2168:23:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable) external"
                      }
                    },
                    "id": 15768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2168:30:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15769,
                  "nodeType": "ExpressionStatement",
                  "src": "2168:30:70"
                }
              ]
            },
            "documentation": "@dev Same as {withdrawPayments}, but forwarding all gas to the recipient.\n     * WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\nMake sure you trust the recipient, or are either following the\nchecks-effects-interactions pattern or using {ReentrancyGuard}.\n     * _Available since v2.4.0._",
            "id": 15771,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawPaymentsWithGas",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15761,
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 15771,
                  "src": "2126:21:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 15760,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2126:15:70",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2125:23:70"
            },
            "returnParameters": {
              "id": 15763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2158:0:70"
            },
            "scope": 15803,
            "src": "2093:112:70",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15783,
              "nodeType": "Block",
              "src": "2385:48:70",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15780,
                        "name": "dest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15773,
                        "src": "2421:4:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15778,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15737,
                        "src": "2402:7:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Escrow_$15968",
                          "typeString": "contract Escrow"
                        }
                      },
                      "id": 15779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositsOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15876,
                      "src": "2402:18:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 15781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2402:24:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15777,
                  "id": 15782,
                  "nodeType": "Return",
                  "src": "2395:31:70"
                }
              ]
            },
            "documentation": "@dev Returns the payments owed to an address.\n@param dest The creditor's address.",
            "id": 15784,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payments",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15773,
                  "name": "dest",
                  "nodeType": "VariableDeclaration",
                  "scope": 15784,
                  "src": "2341:12:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15772,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2341:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2340:14:70"
            },
            "returnParameters": {
              "id": 15777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15776,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15784,
                  "src": "2376:7:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2376:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2375:9:70"
            },
            "scope": 15803,
            "src": "2323:110:70",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15801,
              "nodeType": "Block",
              "src": "2855:52:70",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15798,
                        "name": "dest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15786,
                        "src": "2895:4:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 15796,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15788,
                          "src": "2887:6:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15791,
                            "name": "_escrow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15737,
                            "src": "2865:7:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Escrow_$15968",
                              "typeString": "contract Escrow"
                            }
                          },
                          "id": 15794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deposit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15905,
                          "src": "2865:15:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                            "typeString": "function (address) payable external"
                          }
                        },
                        "id": 15795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2865:21:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_address_$returns$__$value_$",
                          "typeString": "function (uint256) returns (function (address) payable external)"
                        }
                      },
                      "id": 15797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2865:29:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 15799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2865:35:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15800,
                  "nodeType": "ExpressionStatement",
                  "src": "2865:35:70"
                }
              ]
            },
            "documentation": "@dev Called by the payer to store the sent amount as credit to be pulled.\nFunds sent in this way are stored in an intermediate {Escrow} contract, so\nthere is no danger of them being spent before withdrawal.\n     * @param dest The destination address of the funds.\n@param amount The amount to transfer.",
            "id": 15802,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_asyncTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15786,
                  "name": "dest",
                  "nodeType": "VariableDeclaration",
                  "scope": 15802,
                  "src": "2816:12:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15785,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2816:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15788,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 15802,
                  "src": "2830:14:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2830:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2815:30:70"
            },
            "returnParameters": {
              "id": 15790,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2855:0:70"
            },
            "scope": 15803,
            "src": "2792:115:70",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 15804,
        "src": "787:2122:70"
      }
    ],
    "src": "0:2910:70"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.d15a3125.mod.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2020-11-19T10:56:46.791Z"
}